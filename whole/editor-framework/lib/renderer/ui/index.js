"use strict";let UI={};module.exports=UI,UI.Settings=require("./settings"),UI._DomUtils=require("./utils/dom-utils"),UI._FocusMgr=require("./utils/focus-mgr"),UI._ResMgr=require("./utils/resource-mgr"),UI.DockUtils=require("./utils/dock-utils"),UI.DragDrop=require("./utils/drag-drop"),UI.Resizable=require("./behaviors/resizable"),UI.Droppable=require("./behaviors/droppable"),UI.Dockable=require("./behaviors/dockable"),UI.Focusable=require("./behaviors/focusable"),UI.Disable=require("./behaviors/disable"),UI.Readonly=require("./behaviors/readonly"),UI.ButtonState=require("./behaviors/button-state"),UI.InputState=require("./behaviors/input-state"),UI.DockResizer=require("./dock/resizer"),UI.Dock=require("./dock/dock"),UI.MainDock=require("./dock/main-dock"),UI.Tab=require("./panel/tab"),UI.Tabs=require("./panel/tabs"),UI.Panel=require("./panel/panel"),UI.PanelFrame=require("./panel/frame");const JS=require("../../share/js-utils");JS.assign(UI,UI._DomUtils),JS.assign(UI,UI._ResMgr),UI.focus=UI._FocusMgr._setFocusElement,UI.focusParent=UI._FocusMgr._focusParent,UI.focusNext=UI._FocusMgr._focusNext,UI.focusPrev=UI._FocusMgr._focusPrev,JS.copyprop("lastFocusedPanelFrame",UI._FocusMgr,UI),JS.copyprop("focusedPanelFrame",UI._FocusMgr,UI),JS.copyprop("lastFocusedElement",UI._FocusMgr,UI),JS.copyprop("focusedElement",UI._FocusMgr,UI),JS.assign(UI,require("./elements/utils")),UI.importStylesheets(["theme://elements/resizer.css","theme://elements/tab.css","theme://elements/tabs.css","theme://elements/dock.css","theme://elements/panel.css","theme://elements/panel-frame.css","theme://elements/box-container.css","theme://elements/button.css","theme://elements/checkbox.css","theme://elements/color-picker.css","theme://elements/color.css","theme://elements/hint.css","theme://elements/input.css","theme://elements/loader.css","theme://elements/markdown.css","theme://elements/num-input.css","theme://elements/progress.css","theme://elements/prop-table.css","theme://elements/prop.css","theme://elements/section.css","theme://elements/select.css","theme://elements/slider.css","theme://elements/splitter.css","theme://elements/text-area.css"]).then(()=>{[UI.DockResizer,UI.Dock,UI.MainDock,UI.Tab,UI.Tabs,UI.Panel,UI.PanelFrame].forEach(e=>{document.registerElement(e.tagName,e)}),UI.BoxContainer=require("./elements/box-container"),UI.Button=require("./elements/button"),UI.Checkbox=require("./elements/checkbox"),UI.Color=require("./elements/color"),UI.ColorPicker=require("./elements/color-picker"),UI.DropArea=require("./elements/drop-area"),UI.Hint=require("./elements/hint"),UI.Input=require("./elements/input"),UI.Loader=require("./elements/loader"),UI.Markdown=require("./elements/markdown"),UI.NumInput=require("./elements/num-input"),UI.Progress=require("./elements/progress"),UI.Prop=require("./elements/prop"),UI.PropTable=require("./elements/prop-table"),UI.Section=require("./elements/section"),UI.Select=require("./elements/select"),UI.Slider=require("./elements/slider"),UI.Splitter=require("./elements/splitter"),UI.TextArea=require("./elements/text-area"),UI.VirtualList=require("./elements/vlist");const e=require("./elements/props");["string","number","boolean","array","object","enum","color","vec2","vec3"].forEach(r=>{UI.registerProperty(r,e[r])}),UI.Shadow=require("./elements/shadow"),UI.WebView=require("./elements/webview")}),UI.VueUtils=require("./utils/vue-utils"),UI.PolymerUtils=require("./utils/polymer-utils"),UI.PolymerFocusable=require("./behaviors/polymer-focusable");