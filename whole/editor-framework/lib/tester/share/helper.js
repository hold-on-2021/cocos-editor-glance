"use strict";function _popReplyAndTimeout(e){let t,s,r=e[e.length-1];if("number"==typeof r){if(e.length<2)return null;if(s=r,r=e[e.length-2],"function"!=typeof r)return null;t=r,e.splice(-2,2)}else{if("function"!=typeof r)return null;t=r,s=5e3,e.pop()}return{reply:t,timeout:s}}const Electron=require("electron"),Sinon=require("sinon");let _ipc=null;_ipc=Editor.isMainProcess?Electron.ipcMain:Electron.ipcRenderer;let Helper={_reply(...e){let t=_popReplyAndTimeout(e);if(!t)return!1;for(let s=0;s<this._spyReplys.length;++s){let r=this._spyReplys[s];if(e.length!==r.args.length)continue;let i=!0;for(let t=0;t<r.args.length;++t)if(e[t]!==r.args[t]){i=!1;break}if(i)return t.reply.apply(null,r.replyArgs),!0}return!1},_spy(){this._spying=!0,this._spyWithArgs={},this._spyReplys=[],["sendToMain","sendToPanel","sendToMainWin"].forEach(e=>{let t=Editor.Ipc[e];this[`_${e}`]=t,Editor.Ipc[e]=((...e)=>{this._reply.apply(this,e)||t.apply(Editor.Ipc,e)}),this[e]=Sinon.spy(Editor.Ipc,e)}),["sendToWins","sendToAll"].forEach(e=>{this[`_${e}`]=Editor.Ipc[e],Editor.Ipc[e]=function(){},this[e]=Sinon.spy(Editor.Ipc,e)})},_unspy(){if(!this._spying)return;this._spying=!0,this._spyWithArgs=null,this._spyReplys=null;["sendToMain","sendToPanel","sendToMainWin","sendToWins","sendToAll"].forEach(e=>{this[e].restore(),Editor[e]=this[`_${e}`],this[`_${e}`]=null})},detectLeak(e){Object.defineProperty(global,e,{set:()=>{let e=new Error("Global leak happens here!!");throw console.log(e.stack),e}})},runEditor(e,t){let s=this;if(!(e instanceof tap.Test))throw new TypeError("Expected tap.Test instance, got "+typeof e);e.beforeEach(e=>{Editor.init(t),t.enableIpc||s._spy(),e()}),e.afterEach(e=>{t.enableIpc||s._unspy(),e()})},reset(){["sendToMain","sendToPanel","sendToMainWin","sendToWins","sendToAll"].forEach(e=>{this[e].reset&&this[e].reset()}),this._spyWithArgs={},this._spyReplys=[]},message(e,t){let s=this._spyWithArgs[e];return s?s[t]:null},spyMessages(e,t){if(!this._spyWithArgs)throw new Error("Do not spy on message before `Helper.spy` is invoked");let s=this[e];if(!s)return;let r=[],i=this._spyWithArgs[e]||{};return t.forEach(e=>{let t=s.withArgs(e);i[e]=t,r.push(t)}),this._spyWithArgs[e]=i,r},reply(...e){if(!this._spyReplys)throw new Error("Do not register your reply before `Helper.spy` is invoked");return e.length?Array.isArray(e[e.length-1])?(e=[].slice.call(e,0,e.length-1),this._spyReplys.push({args:e,replyArgs:e[e.length-1]}),void 0):(Editor.error("The last argument must be an array"),void 0):(Editor.error("You must specify your spy arguments"),void 0)},send(e,...t){t=[e,{},...t],_ipc.emit.apply(_ipc,t)}};module.exports=Helper;