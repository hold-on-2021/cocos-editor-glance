"use strict";const Electron=require("electron"),ipcMain=Electron.ipcMain,Path=require("fire-path"),Async=require("async"),_=require("lodash"),Fs=require("fire-fs"),Project=require("../share/project"),EngineUtil=require("../share/engine-utils");require("../share/login"),require("../share/protocol/protocol-core"),Editor.versions.dashboard="0.3.0",Editor.builtinCocosRoot=EngineUtil.getEnginePath(),Editor.Metrics=require("../share/metrics/metrics-core");let _tray,_children=[],_quit=!1;module.exports=function(e,r){(_tray=new Electron.Tray(Editor.url("app://dashboard/static/tray.png"))).setToolTip("Cocos Creator"),_tray.on("click",()=>{Editor.Window.main&&(Editor.App._profile.reload(),Editor.Ipc.sendToMainWin("dashboard:refresh-recent-project"),Editor.Ipc.sendToMainWin("dashboard:refresh-last-create"),Editor.Window.main.show())}),Electron.app.on("activate",()=>{Editor.Window.main&&(Editor.App._profile.reload(),Editor.Ipc.sendToMainWin("dashboard:refresh-recent-project"),Editor.Ipc.sendToMainWin("dashboard:refresh-last-create"),Editor.Window.main.show())}),Editor.requireLogin=!e.nologin,Editor.testing=!!e.testing,Editor.testing&&Editor.log("Running in testing environment"),Editor.showInternalMount=Editor.dev&&!!e.internal,Editor.Profile.register("global",Editor.App.home),Editor.log("Load ~/.CocosCreator/settings.json"),Editor.App._profile=Editor.Profile.load("profile://global/settings.json",{"recently-opened":[],"last-create":"","last-login":"",language:"unknown","remember-passwd":!0,"node-tree-state":1,"local-ip":1,"show-console-log":!1,"show-meta-backup-dialog":!0,"trim-imported-image":!0,step:.1,"auto-sync-prefab":!1,"auto-compiler-scripts":!0,"script-editor":"default","picture-editor-root":"","script-editor-list":[],"ndk-root":process.env.NDK_ROOT||"","android-sdk-root":process.env.ANDROID_SDK_ROOT||"","ant-root":process.env.ANT_ROOT||"","js-engine-path":"","use-default-js-engine":!0,"cpp-engine-path":"","use-default-cpp-engine":!0,"preview-platform":"browser","preview-browser":"default","preview-browser-list":[],"simulator-resolution":1,"simulator-orientation":!1,"auto-refresh":!0,"wechatgame-app-path":""}),Editor.Profile.setDefault("profile://global/updates.json",{"received-ids":[],"installed-hotupdates":[]});let t=Editor.App._profile.data;if(Editor.lastLogin=t["last-login"],Editor.log("checking language setting..."),"en"===t.language||"zh"===t.language)Editor.lang=t.language;else{let e="zh";e=0===Editor.Dialog.messageBox({type:"question",buttons:["中文","English"],title:"Choose Language",message:"Please choose your language / 请选择语言",detail:"",defaultId:0,cancelId:0,noLink:!0})?"zh":"en",Editor.lang=t.language=e,Editor.App._profile.save()}Editor.log("Language: "+Editor.lang),Editor.log("Initializing Cocos Creator Dashboard"),Editor.init({i18n:require(`../share/i18n/${Editor.lang}/localization`),"main-menu":require("./main-menu")}),Editor.Package.removePath(Path.join(Editor.App.path,Editor.dev?"":"..","builtin"));let o=Path.join(Editor.App.path,Editor.dev?"":"..","builtin","ui-kit");Editor.Package.load(o,e=>{e&&Editor.failed(`Failed to load package at ${o}: ${e.message}`),r&&r()})},Editor.App.extend({_profile:{},createProject:function(e,r){e=e||{};try{if("string"!=typeof e.path)throw new Error("opts.path must be string")}catch(e){return r&&r(e),void 0}Editor.App._profile.data["last-create"]=e.path,Editor.App._profile.save(),Project.create(e.path,e.template,r)},addProject(e){Project.add(e)},removeProject(e){Project.remove(e)},getProjectInfo(e,r){Project.getInfo(e,r)},checkProject(e,r){Project.check(e,r)},runEditor(e,r,t,o){const i=require("child_process").spawn,n=Electron.app.getPath("exe");let a=Path.join(e,"local/logs/project.log"),d=[Editor.App.path,"--path",e,"--logfile",a];r||d.push("--nologin"),t&&d.push("--dev"),Editor.showInternalMount&&d.push("--internal");let p=i(n,d,{stdio:[0,1,2,"ipc"]});p.on("message",e=>{"show-dashboard"===e.channel&&(Editor.App._profile.reload(),Editor.Ipc.sendToMainWin("dashboard:refresh-recent-project"),Editor.Ipc.sendToMainWin("dashboard:refresh-last-create"),Editor.Window.main.show())}),p.on("close",()=>{let e=_children.indexOf(p);-1!==e&&_children.splice(e,1),0!==_children.length||_quit||(Editor.App._profile.reload(),Editor.Ipc.sendToMainWin("dashboard:refresh-recent-project"),Editor.Ipc.sendToMainWin("dashboard:refresh-last-create"),Editor.Window.main.show())}),_children.push(p),o&&o()},run(){Async.series([e=>{require("../share/check-internet").checkInternet(function(r){Editor.isOffline=!r,Editor.isOffline&&(Editor.requireLogin=!1),e()})},e=>{let r=Editor.App._profile.data;r["recently-opened"]=_.uniq(r["recently-opened"]),Editor.App._profile.save(),e()},e=>{Editor.run("app://dashboard/index.html",{title:"Cocos Creator",width:1024,height:680,minWidth:1024,minHeight:680,show:!1,resizable:!0,frame:!1}),Editor.Window.main.nativeWin.on("close",e=>{_children.length&&(e.preventDefault(),Editor.Window.main.nativeWin.closeDevTools(),Editor.Window.main.nativeWin.hide())}),require("../share/auto-update/auto-update.js"),Editor.Metrics.setClientId(function(){Editor.Metrics.prepareUserIdentity(),Editor.Metrics.sendAppInfo(),Editor.Metrics.trackEvent({category:"Editor",action:"Dashboard Open",label:"new metrics"})}),e()}])},quit(e){_quit=!0;_children.slice().forEach(e=>{e.kill()}),Editor.Metrics.trackEvent({category:"Editor",action:"Dashboard Close",label:"new metrics"},e),setTimeout(function(){console.log("quit due to request timeout"),e()},2e3)}}),ipcMain.on("app:query-recent",e=>{let r=Editor.App._profile.data,t=r["recently-opened"],o=[];Async.each(t,function(e,r){Editor.App.getProjectInfo(e,function(e){e&&o.push(e),r()})},function(t){if(t)return e.reply(t,[]),void 0;r["recently-opened"]=o.map(function(e){return e.path}),Editor.App._profile.save(),e.reply(null,o)})}),ipcMain.on("app:query-templates",e=>{let r=Editor.url("unpack://templates");if(!Fs.isDirSync(r))return e.reply(null,[]);let t=Fs.readdirSync(r),o=[];Async.each(t,(e,t)=>{let i=Path.join(r,e),n=Path.join(i,"template.json");Fs.readFile(n,(e,r)=>{if(e)return t();let n=JSON.parse(r);n.banner=Path.join(i,n.banner),n.name=Editor.T(n.name),n.desc=Editor.T(n.desc),n.path=i,o.push(n),t()})},r=>{r&&console.error(r),e.reply(r,o)})}),ipcMain.on("app:create-project",(e,r)=>{Editor.log("Creating new project from template: "+r.template),Async.series([e=>{Editor.App.createProject(r,e)}],t=>{if(t)return e.reply(Editor.Utils.wrapError(t)),void 0;Editor.App.runEditor(r.path,Editor.requireLogin,Editor.dev,()=>{Editor.App.addProject(r.path),Editor.Window.main.close(),e.reply(null)})})}),ipcMain.on("app:open-project",(e,r)=>{Editor.App.checkProject(r,t=>{if(t)return e.reply(Editor.Utils.wrapError(t)),void 0;Editor.User.isLoggedIn(t=>{let o=Editor.requireLogin;t||(o=!1),Editor.App.runEditor(r,o,Editor.dev,()=>{Editor.App.addProject(r),Editor.Window.main.close(),e.reply(null)})})})}),ipcMain.on("app:close-project",(e,r)=>{Editor.App.removeProject(r)}),ipcMain.on("app:window-minimize",()=>{Editor.Window.main.minimize()}),ipcMain.on("app:window-close",()=>{Editor.Window.main.close()}),ipcMain.on("app:get-last-create",e=>{let r=Editor.App._profile.data["last-create"];void 0===r&&(r=null),e.returnValue=r}),ipcMain.on("app:open-manual-doc",(e,r)=>{require("../share/manual").openManual(r),e.reply(null)}),ipcMain.on("app:open-api-doc",e=>{require("../share/manual").openAPI(),e.reply(null)});