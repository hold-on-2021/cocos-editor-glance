"use strict";Vue.component("cc-sprite-section",{template:'\n    <ui-prop name="Rotated" type="boolean" v-value="target.rotated" readonly></ui-prop>\n    <ui-prop name="Offset X" type="number" v-value="target.offsetX" readonly></ui-prop>\n    <ui-prop name="Offset Y" type="number" v-value="target.offsetY" readonly></ui-prop>\n    <ui-prop name="Trim Type" type="enum" v-value="target.trimType">\n      <option value="auto">Auto</option>\n      <option value="custom">Custom</option>\n    </ui-prop>\n    <ui-prop name="Trim Threshold" type="number" v-value="target.trimThreshold"></ui-prop>\n    <ui-prop name="Trim X" type="number"\n      v-value="target.trimX"\n      v-disabled="!isCustom()"\n    ></ui-prop>\n    <ui-prop name="Trim Y" type="number"\n      v-value="target.trimY"\n      v-disabled="!isCustom()"\n    ></ui-prop>\n    <ui-prop name="Trim Width" type="number"\n      v-value="target.width"\n      v-disabled="!isCustom()"\n    ></ui-prop>\n    <ui-prop name="Trim Height" type="number"\n      v-value="target.height"\n      v-disabled="!isCustom()"\n    ></ui-prop>\n    <ui-prop name="Border Top" type="number" v-value="target.borderTop"></ui-prop>\n    <ui-prop name="Border Bottom" type="number" v-value="target.borderBottom"></ui-prop>\n    <ui-prop name="Border Left" type="number" v-value="target.borderLeft"></ui-prop>\n    <ui-prop name="Border Right" type="number" v-value="target.borderRight"></ui-prop>\n\n    <ui-button :style="cssBtn" class="blue" @confirm="editSprite">{{ T(\'COMPONENT.sprite.edit_button\') }}</ui-button>\n  ',data:()=>({cssBtn:{display:"block",width:"240px",margin:"10px auto"}}),props:{target:{twoWay:!0,type:Object}},methods:{T:Editor.T,editSprite(){Editor.Panel.open("sprite-editor",{uuid:this.target.uuid})},isCustom(){return"custom"===this.target.trimType}}});