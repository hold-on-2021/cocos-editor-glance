"use strict";const Fs=require("fire-fs"),Path=require("fire-path"),Electron=require("electron"),Uuid=require("node-uuid"),buildUtils=require(Editor.url("app://editor/share/build-utils")),AndroidList=require(Editor.url("packages://builder/panel/platform/android")),WebDesktopList=require(Editor.url("packages://builder/panel/platform/web-desktop")),WebMobileList=require(Editor.url("packages://builder/panel/platform/web-mobile")),FBInstantGamesList=require(Editor.url("packages://builder/panel/platform/fb-instant-games")),WechatGameList=require(Editor.url("packages://builder/panel/platform/wechatgame")),QQPlayList=require(Editor.url("packages://builder/panel/platform/qqplay")),WindowsList=require(Editor.url("packages://builder/panel/platform/windows")),IOSList=require(Editor.url("packages://builder/panel/platform/ios")),MacList=require(Editor.url("packages://builder/panel/platform/mac")),Dialog=require("electron").remote.dialog;var style="\n    @import url('app://bower_components/fontawesome/css/font-awesome.min.css');\n\n    :host {\n        display: flex;\n        flex-direction: column;\n    }\n\n    h2 {\n        margin: 20px 20px 0 20px;\n        font-size: 26px;\n        color: #DDD;\n    }\n\n    header {\n        display: flex;\n        margin: 0 20px;\n        padding: 20px 0;\n        border-bottom: 1px solid #666;\n    }\n\n    .progress {\n        flex: 14;\n        position: relative;\n    }\n    .progress ui-progress {\n        width: 100%;\n    }\n\n    .state {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        line-height: 16px;\n        margin: 0 15px 0 0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        text-align: center;\n        color: white;\n    }\n\n    .state[state=failed] {\n        color: red;\n    }\n\n    section {\n        margin: 10px 10px;\n        padding: 0 10px;\n        flex: 1;\n        overflow-y: auto;\n    }\n\n    .fix-width {\n        width: 1px;\n    }\n\n    .height-limited {\n        max-height: 240px;\n    }\n\n    .height-limited ui-box-container {\n        max-height: 228px;\n        min-height: 100px;\n    }\n\n    ui-box-container li {\n        margin: 4px 0;\n    }\n\n    ui-box-container li .fa.fa-star {\n        color: yellow;\n    }\n\n    footer {\n        border-top: 1px solid #666;\n        padding: 15px 0;\n        margin: 0 20px;\n        justify-content: flex-end;\n    }\n",template=`\n    <h2>${Editor.T("MAIN_MENU.panel.build")}</h2>\n\n    <header>\n        <div class="progress">\n            <ui-progress\n                class="blue small"\n                v-value="buildProgress"\n            ></ui-progress>\n            <div class="state" v-bind:state="buildState">\n                <span>{{buildState}}</span>\n            </div>\n        </div>\n        <ui-button class="tiny"\n            v-if="data.platform==='win32'||data.platform==='android'||data.platform==='ios'||data.platform==='mac'"\n            v-on:confirm="_onOpenCompileLogFile"\n            title="${Editor.T("BUILDER.open_compile_file")}"\n        >\n            <i class="fa fa-file-code-o"></i>\n        </ui-button>\n    </header>\n\n    <section>\n        <ui-prop name="${Editor.T("BUILDER.title")}">\n            <ui-input class="flex-1" v-value="project.title"></ui-input>\n        </ui-prop>\n\n        <ui-prop name="${Editor.T("BUILDER.platform")}">\n            <ui-select class="flex-1" v-value="data.platform">\n                <template v-for="item in platforms">\n                    <option v-value="item.value">{{item.text}}</option>\n                </template>\n            </ui-select>\n        </ui-prop>\n\n        <ui-prop name="${Editor.T("BUILDER.build_path")}">\n            <div class="flex-1 layout horizontal center">\n                <ui-input class="flex-2" v-value="data.buildPath"></ui-input>\n                <ui-button class="tiny" v-on:confirm="_onChooseDistPathClick">\n                    ···\n                </ui-button>\n                <ui-button class="tiny" v-on:confirm="_onShowInFinderClick">\n                    ${Editor.T("SHARED.open")}\n                </ui-button>\n            </div>\n        </ui-prop>\n\n        <ui-prop name="${Editor.T("BUILDER.start_scene")}">\n            <ui-select class="flex-1" v-value="project.startScene">\n                <template v-for="item in scenes">\n                    <option v-if="item.checked" v-value="item.value">{{item.text}}</option>\n                </template>\n            </ui-select>\n        </ui-prop>\n\n        <ui-prop name="${Editor.T("BUILDER.scenes")}" auto-height>\n            <div class="flex-1 layout center fix-width">\n                <ui-box-container class="shadow height-limited">\n\n                    <li class="layout horizontal center" v-for="item in scenes">\n                        <ui-checkbox class="flex-1"\n                            v-disabled="project.startScene===item.value||item.text.startsWith('db://assets/resources/')"\n                            v-value="item.checked"\n                        >\n                            {{item.text}}\n                        </ui-checkbox>\n                        <i class="fa fa-star" v-if="project.startScene===item.value"></i>\n                    </li>\n\n                </ui-box-container>\n                <ui-checkbox v-on:confirm="_onSelectAllCheckedChanged" v-value="all">\n                    ${Editor.T("BUILDER.select_all")}\n                </ui-checkbox>\n            </div>\n        </ui-prop>\n\n        <ui-prop\n            name="${Editor.T("BUILDER.merge_asset.optimize_hot_update")}"\n            tooltip="${Editor.T("BUILDER.merge_asset.optimize_hot_update_tooltip")}"\n            v-if="!(data.platform==='web-mobile'||data.platform==='web-desktop'||data.platform==='fb-instant-games')"\n        >\n            <ui-checkbox v-value="project.optimizeHotUpdate"></ui-checkbox>\n        </ui-prop>\n        <ui-prop\n            name="${Editor.T("BUILDER.merge_asset.inline_SpriteFrames")}"\n            tooltip="${Editor.T("BUILDER.merge_asset.inline_SpriteFrames_tooltip")}"\n            v-if="data.platform==='web-mobile'||data.platform==='web-desktop'||data.platform==='fb-instant-games'"\n        >\n            <ui-checkbox v-value="project.inlineSpriteFrames"></ui-checkbox>\n        </ui-prop>\n        <ui-prop\n            name="${Editor.T("BUILDER.merge_asset.inline_SpriteFrames")}"\n            tooltip="${Editor.T("BUILDER.merge_asset.inline_SpriteFrames_tooltip")}"\n            v-if="!(data.platform==='web-mobile'||data.platform==='web-desktop'||data.platform==='fb-instant-games')"\n            v-disabled="project.optimizeHotUpdate"\n        >\n            <ui-checkbox value="false"\n                v-if="project.optimizeHotUpdate"\n            ></ui-checkbox>\n            <ui-checkbox v-value="project.inlineSpriteFrames_native"\n                v-if="!project.optimizeHotUpdate"\n            ></ui-checkbox>\n        </ui-prop>\n\n        <ui-prop\n            name="${Editor.T("BUILDER.merge_asset.merge_start_scene")}"\n            tooltip="${Editor.T("BUILDER.merge_asset.merge_start_scene_tooltip")}"\n            v-if="data.platform==='web-mobile'||data.platform==='web-desktop'||data.platform==='fb-instant-games'"\n        >\n            <ui-checkbox v-value="project.mergeStartScene"></ui-checkbox>\n        </ui-prop>\n\n        \x3c!-- platform --\x3e\n        <android-list\n             v-if="data.platform==='android'"\n             v-bind:data="data"\n             v-bind:anysdk="anysdk"\n             v-bind:project="project"\n         ></android-list>\n\n        <web-mobile-list\n            v-if="data.platform==='web-mobile'"\n            v-bind:data="data"\n            v-bind:anysdk="anysdk"\n            v-bind:project="project"\n        ></web-mobile-list>\n\n        <web-desktop-list\n            v-if="data.platform==='web-desktop'"\n            v-bind:data="data"\n            v-bind:project="project"\n        ></web-desktop-list>\n\n        <windows-list\n            v-if="data.platform==='win32'"\n            v-bind:data="data"\n            v-bind:project="project"\n        ></windows-list>\n\n        <ios-list\n            v-if="data.platform==='ios'"\n            v-bind:data="data"\n            v-bind:anysdk="anysdk"\n            v-bind:project="project"\n        ></ios-list>\n\n        <mac-list\n            v-if="data.platform==='mac'"\n            v-bind:data="data"\n            v-bind:project="project"\n        ></mac-list>\n        \n        <fb-instant-games-list\n            v-if="data.platform==='fb-instant-games'"\n            v-bind:data="data"\n            v-bind:anysdk="anysdk"\n            v-bind:project="project"\n        ></fb-instant-games-list>\n\n        <wechatgame-list\n            v-if="data.platform==='wechatgame'"\n            v-bind:data="data"\n            v-bind:project="project"\n        ></wechatgame-list>\n        \n        <qqplay-list\n            v-if="data.platform==='qqplay'"\n            v-bind:data="data"\n            v-bind:project="project"\n        ></qqplay-list>\n\n        <ui-prop name="${Editor.T("BUILDER.debug")}">\n            <ui-checkbox v-value="data.debug"></ui-checkbox>\n        </ui-prop>\n\n        <ui-prop name="${Editor.T("BUILDER.source_map")}">\n            <ui-checkbox v-value="data.sourceMaps"></ui-checkbox>\n        </ui-prop>\n    </section>\n\n    <footer class="group layout horizontal center">\n        <ui-button\n            class="green"\n            v-on:confirm="_onBuildClick"\n            v-disabled="buildState!=='idle'&&buildState!=='completed'&&buildState!=='failed'"\n         >${Editor.T("BUILDER.build")}</ui-button>\n         <i class="fa fa-arrow-right"></i>\n\n        <template v-if="data.platform==='win32'||data.platform==='android'||data.platform==='ios'||data.platform==='mac'">\n            <ui-button\n                class="green"\n                v-on:confirm="_onCompileClick"\n                v-if="task!=='compile'"\n            >\n                ${Editor.T("BUILDER.compile")}\n            </ui-button>\n            <ui-button\n                class="green"\n                v-on:confirm="_onStopCompileClick"\n                v-if="task==='compile'"\n            >\n                ${Editor.T("BUILDER.stop_compile")}\n            </ui-button>\n            <i class="fa fa-arrow-right"></i>\n        </template>\n\n        <ui-button\n            class="green"\n            v-on:confirm="_onPreviewClick"\n        >\n            ${Editor.T("BUILDER.play")}\n        </ui-button>\n    </footer>\n`,createPlatforms=function(e){var t=[];return t.push({value:"web-mobile",text:"Web Mobile"}),t.push({value:"web-desktop",text:"Web Desktop"}),t.push({value:"fb-instant-games",text:"Facebook Instant Games"}),t.push({value:"wechatgame",text:"Wechat Game"}),t.push({value:"qqplay",text:"QQ Play"}),t.push({value:"android",text:"Android"}),"darwin"===process.platform&&(t.push({value:"ios",text:"iOS"}),t.push({value:"mac",text:"Mac"})),"win32"===process.platform&&t.push({value:"win32",text:"Windows"}),t},filterExcludeScenes=function(e,t){for(var i=!1,n=0;n<e.length;n++){let a=e[n];t.some(e=>e.uuid===a)||(i=!0,e.splice(n--,1))}return i},updateScenes=function(e,t,i){t.forEach(t=>{e.push({value:t.uuid,text:t.url,checked:-1===i.indexOf(t.uuid)})})},updateStartScene=function(e,t){var i=e.startScene;let n=!!t.find(function(e){return e.value===i});i&&n||(t.length>0?e.startScene=t[0].value:e.startScene="")},deepCopyObject=function(e,t,i){t=t||{};return Object.keys(e).forEach(n=>{if(!i||-1===i.indexOf(n)){var a=e[n];"object"!=typeof a||Array.isArray(a)?t[n]=a:t[n]=deepCopyObject(a)}}),t};Editor.Panel.extend({style:style,template:template,messages:{"builder:state-changed":function(e,t,i){if(this._vm){if(i*=100,"error"===t)return this._vm.buildProgress=i,this._vm.buildState="failed",this._vm.task="",void 0;if("finish"===t)return this._vm.buildProgress=100,this._vm.buildState="completed",this._vm.task="",void 0;this._vm.buildProgress=i,this._vm.buildState=t}},"keystore:created":function(e,t){this._vm.data.keystorePath=t.path,this._vm.data.keystorePassword=t.password,this._vm.data.keystoreAlias=t.alias,this._vm.data.keystoreAliasPassword=t.aliasPassword}},ready(){var e=this.profiles.local,t=this.profiles.project,i=deepCopyObject(e.data,{}),n=deepCopyObject(t.data,{}),a=this._vm=new window.Vue({el:this.shadowRoot,data:{platforms:createPlatforms(n),scenes:[],all:!1,task:"",data:i,project:n,buildState:"idle",buildProgress:0,anysdk:"zh"===Editor.lang},watch:{data:{handler(t){e.save&&(deepCopyObject(t,e.data),e.save())},deep:!0},project:{handler(e){t.save&&(deepCopyObject(e,t.data),t.save())},deep:!0},scenes:{handler(e){var t=this.project.startScene;for(let n=0;n<e.length;n++){let a=e[n];if(!a.text.startsWith("db://assets/resources/")&&t!==a.value){var i=this.project.excludeScenes.indexOf(a.value);a.checked||-1!==i?a.checked&&-1!==i&&this.project.excludeScenes.splice(i,1):this.project.excludeScenes.push(a.value)}}this.all=this.scenes.every(function(e){return e.checked})},deep:!0}},components:{"android-list":AndroidList,"web-desktop-list":WebDesktopList,"web-mobile-list":WebMobileList,"fb-instant-games-list":FBInstantGamesList,"wechatgame-list":WechatGameList,"qqplay-list":QQPlayList,"windows-list":WindowsList,"ios-list":IOSList,"mac-list":MacList},methods:{_onOpenCompileLogFile(e){e.stopPropagation(),Editor.Ipc.sendToMain("app:open-cocos-console-log")},_onChooseDistPathClick(e){e.stopPropagation();let t=Editor.Dialog.openFile({defaultPath:buildUtils.getAbsoluteBuildPath(i.buildPath),properties:["openDirectory"]});t&&t[0]&&(Path.contains(Editor.projectInfo.path,t[0])?(this.data.buildPath=Path.relative(Editor.projectInfo.path,t[0]).replace(/\\/g,"/"),""===this.data.buildPath&&(this.data.buildPath="./")):this.data.buildPath=t[0])},_getAPILevel(e){let t=e.match("android-([0-9]+)$"),i=-1;return t&&(i=parseInt(t[1])),i},_onShowInFinderClick(e){e.stopPropagation();let t=buildUtils.getAbsoluteBuildPath(i.buildPath);if(!Fs.existsSync(t))return Editor.warn("%s not exists!",t),void 0;Electron.shell.showItemInFolder(t),Electron.shell.beep()},_onSelectAllCheckedChanged(e){if(!this.scenes)return;let t=this.project.startScene;for(let n=0;n<this.scenes.length;n++){let a=this.scenes[n];if(!a.text.startsWith("db://assets/resources/")&&t!==a.value){a.checked=e.detail.value;var i=this.project.excludeScenes.indexOf(a.value);a.checked||-1!==i?a.checked&&-1!==i&&this.project.excludeScenes.splice(i,1):this.project.excludeScenes.push(a.value)}}},startTask(e,t){this.task=e,Editor.Profile.load("profile://project/project.json",(i,n)=>{t.excludedModules=n.data["excluded-modules"],Editor.Ipc.sendToMain("builder:start-task",e,t)})},_onBuildClick(e){e.stopPropagation(),Editor.Ipc.sendToPanel("scene","scene:query-dirty-state",(e,t)=>{if(t.dirty)return Editor.error(t.name+" "+Editor.T("BUILDER.error.dirty_info")),void 0;this._build()})},_build(){var n=buildUtils.getAbsoluteBuildPath(i.buildPath),a=Path.win32.dirname(n),o=i.platform;if(!Fs.existsSync(a))return Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.build_dir_not_exists",{buildDir:a})),void 0;var r=this._getAPILevel(i.apiLevel);if("android"===o&&"binary"===i.template&&r<22)return Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.binary_api_level")),void 0;if(-1!==n.indexOf(" "))return Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.build_path_contains_space")),void 0;if(/.*[\u4e00-\u9fa5]+.*$/.test(n))return Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.build_path_contains_chinese")),void 0;var s;if(s="android"===o?/^[a-zA-Z0-9_]*$/:/^[a-zA-Z0-9_-]*$/,!s.test(this.project.title))return Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.project_name_not_legal")),void 0;let l=this.project.packageName;if("ios"===o||"android"===o||"mac"===o){if(s="android"===o?/^[a-zA-Z0-9_.]*$/:/^[a-zA-Z0-9_.-]*$/,!s.test(l))return Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.package_name_not_legal")),void 0;let e=l.split(".");for(let t=0;t<e.length;t++)if(!isNaN(e[t][0]))return Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.package_name_start_with_number")),void 0}Editor.Ipc.sendToAll("builder:state-changed","ready",0);var d=this.scenes.filter(function(e){return e.checked}).map(function(e){return e.value});if(d.length>0){let i=buildUtils.getOptions(t,e);i.scenes=d;const n=Editor.require("app://editor/share/build-platforms");let a=i.platform;if(a){n[a].isNative&&(i.inlineSpriteFrames=i.inlineSpriteFrames_native,i.md5Cache=!1),i.includeEruda=("web-mobile"===a||"fb-instant-games"===a)&&i.includeEruda}this.startTask("build",i),Editor.Ipc.sendToMain("metrics:track-event",{category:"Project",action:"Build",label:a})}else Dialog.showErrorBox(Editor.T("BUILDER.error.build_error"),Editor.T("BUILDER.error.select_scenes_to_build"))},_onCompileClick(i){i.stopPropagation(),this.startTask("compile",buildUtils.getOptions(t,e))},_onStopCompileClick:function(e){e.stopPropagation(),Editor.Ipc.sendToMain("app:stop-compile")},_onPreviewClick(i){i.stopPropagation(),Editor.Ipc.sendToMain("app:run-project",buildUtils.getOptions(t,e))},_openExternal(e,t){e.stopPropagation(),Electron.shell.openExternal(t)}}});a.project.title||(a.project.title=Editor.projectInfo.name),a.project.xxteaKey||(a.project.xxteaKey=Uuid.v4().substr(0,16)),a.project.packageName||(a.project.packageName="org.cocos2d."+a.project.title),a.data.buildPath||(a.data.buildPath="./build"),Editor.Ipc.sendToMain("builder:query-current-state",(e,t)=>{if(e)return Editor.warn(e);a.task=t.task,Editor.Ipc.sendToAll("builder:state-changed",t.state,t.progress)}),Editor.assetdb.queryAssets(null,"scene",function(e,t){var i=!1;i=i||filterExcludeScenes(a.project.excludeScenes,t),updateScenes(a.scenes,t,a.project.excludeScenes),updateStartScene(a.project,a.scenes),i&&a.project.save()})}});