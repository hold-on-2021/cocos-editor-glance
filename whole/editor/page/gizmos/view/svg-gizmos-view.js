(()=>{"use strict";const e=require("svg.js");require("svg.filter.js"),Editor.polymerElement({listeners:{keydown:"_onKeyDown",keyup:"_onKeyUp"},properties:{scale:{type:Number,value:1},transformTool:{type:String,value:"move",observer:"_updateTransformGizmo"},coordinate:{type:String,value:"local",observer:"_updateTransformGizmo"},pivot:{type:String,value:"pivot",observer:"_updateTransformGizmo"},designSize:{type:Array,value:function(){return[640,480]}}},ready(){this._selection=[],this._svg=e(this.$.svg),this._svg.spof(),this.background=this._svg.group(),this.scene=this._svg.group(),this.foreground=this._svg.group(),this.tabIndex=-1},resize(e,t){if(!e||!t){let i=this.$.view.getBoundingClientRect();e=e||i.width,t=t||i.height,e=Math.round(e),t=Math.round(t)}this._svg.size(e,t),this._svg.spof()},update(){this._transformGizmo&&this._transformGizmo.update();let e=!!cc.Canvas.instance;if(this._designRect){this._designRect.visible()!==e&&(e?this._designRect.show():this._designRect.hide())}e&&this.updateDesignRect()},repaintHost(){cc.engine&&cc.engine.repaintInEditMode()},sceneToPixel:e=>e,worldToPixel:e=>e,pixelToScene:e=>e,pixelToWorld:e=>e,updateDesignRect(){this._designRect||(this._designRect=this.background.rect().back());let e=this.sceneToPixel(cc.v2(0,0)),t=this.sceneToPixel(cc.v2(this.designSize[0],this.designSize[1])),i=Editor.GizmosUtils.snapPixel(e.x),s=Editor.GizmosUtils.snapPixel(e.y),o=Editor.GizmosUtils.snapPixel(t.x)-i,n=Editor.GizmosUtils.snapPixel(t.y)-s;o<0&&(i+=o,o=-o),n<0&&(s+=n,n=-n),this._designRect.move(i,s).size(o,n).fill("none").stroke({width:1,color:"#a0a",opacity:1})},updateSelectRect(e,t,i,s){this._selectRect||(this._selectRect=this.foreground.rect().front()),this._selectRect.move(Editor.GizmosUtils.snapPixel(e),Editor.GizmosUtils.snapPixel(t)).size(i,s).fill({color:"rgba(0,128,255,0.4)"}).stroke({width:1,color:"#09f",opacity:1})},fadeoutSelectRect(){if(!this._selectRect)return;let e=this._selectRect;e.animate(200,"-").opacity(0).after(()=>{e.remove()}),this._selectRect=null},rectHitTest(e,t,i,s){let o=this._svg.node.createSVGRect();o.x=e,o.y=t,o.width=i,o.height=s;let n=this._svg.node.getIntersectionList(o,null),r=[];for(let e=0;e<n.length;++e){let t=n[e].instance;t&&t.selectable&&r.push(t)}return r},reset(){this._selection=[],this._transformGizmo&&(this._transformGizmo.remove(),this._transformGizmo=null),this._selectRect&&(this._selectRect.remove(),this._selectRect=null),this._designRect&&(this._designRect.remove(),this._designRect=null),this.background.clear(),this.scene.clear(),this.foreground.clear()},updateGizmosState(e,t){if(!e)return;let i=e._components;for(let s in t)if(e.gizmo&&(e.gizmo[s]=t[s]),!(i.length<=0))for(let e=0,o=i.length;e<o;e++){let o=i[e];o.gizmo&&(o.gizmo[s]=t[s])}this.repaintHost()},select(e){this._selection=this._selection.concat(e);let t=[];for(let e=0;e<this._selection.length;++e){let i=this._selection[e],s=cc.engine.getInstanceById(i);s&&(this.updateGizmosState(s,{selecting:!0,editing:!1}),t.push(s))}this.edit(t)},unselect(e){for(let t=0;t<e.length;++t){let i=e[t];for(let e=0;e<this._selection.length;++e)if(this._selection[e]===i){this._selection.splice(e,1);break}let s=cc.engine.getInstanceById(i);this.updateGizmosState(s,{selecting:!1,editing:!1})}let t=[];for(let e=0;e<this._selection.length;++e){let i=this._selection[e],s=cc.engine.getInstanceById(i);s&&t.push(s)}this.edit(t)},edit(e){if(0===e.length)return this._transformGizmo&&(this._transformGizmo.target=[]),this.repaintHost(),void 0;if(1===e.length){let t=e[0];this.updateGizmosState(t,{selecting:!1,editing:!0})}let t;switch(this.transformTool){case"move":t=_Scene.gizmos.move;break;case"rotate":t=_Scene.gizmos.rotate;break;case"scale":t=_Scene.gizmos.scale;break;case"rect":t=_Scene.gizmos.rect}if(!t)return Editor.error("Unknown transform tool %s",this.transformTool),this.repaintHost(),void 0;this._transformGizmo&&this._transformGizmo instanceof t?this._transformGizmo.target=e:(this._transformGizmo&&this._transformGizmo.remove(),this._transformGizmo=new t(this,e),this._transformGizmo.update()),this.repaintHost()},hoverin(e){let t=cc.engine.getInstanceById(e);this.updateGizmosState(t,{hovering:!0})},hoverout(e){let t=cc.engine.getInstanceById(e);this.updateGizmosState(t,{hovering:!1})},_updateTransformGizmo(){this._transformGizmo&&this.edit(this._transformGizmo.target)},_onKeyDown:function(e){this._transformGizmo&&this._transformGizmo.onKeyDown&&this._transformGizmo.onKeyDown(e)},_onKeyUp:function(e){this._transformGizmo&&this._transformGizmo.onKeyUp&&this._transformGizmo.onKeyUp(e)}})})();