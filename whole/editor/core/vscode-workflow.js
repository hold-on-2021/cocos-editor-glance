const Path=require("path"),Fs=require("fire-fs");module.exports={updateAPIData(){Fs.copySync(Editor.url("unpack://utils/api/creator.d.ts"),Path.join(Editor.projectPath,"creator.d.ts")),Fs.copySync(Editor.url("unpack://utils/vscode-extension/jsconfig.json"),Path.join(Editor.projectPath,"jsconfig.json")),Editor.success("API data generated and copied to "+Path.join(Editor.projectPath,"creator.d.ts"))},updateTypeScriptConf(){Fs.copySync(Editor.url("unpack://utils/vscode-extension/tsconfig.json"),Path.join(Editor.projectPath,"tsconfig.json")),Editor.success("TypeScript Configuration file has been copied to "+Path.join(Editor.projectPath,"tsconfig.json"))},updateDebugger(){let o=Editor.url("unpack://utils/vscode-extension/cocos-creator"),e=Editor.url("unpack://utils/vscode-extension/cocos-debug"),t=Path.join(Editor.App.home,"..",".vscode","extensions");Fs.ensureDirSync(t),Fs.emptyDirSync(Path.join(t,"cocos-creator")),Fs.copySync(o,Path.join(t,"cocos-creator")),Fs.copySync(e,Path.join(t,"cocos-debug")),Editor.success("VS Code extension installed to "+t)},updateDebugSetting(){let o=Editor.url("unpack://utils/vscode-extension/debugger/launch.json"),e=Path.join(Editor.projectPath,".vscode");Fs.ensureDirSync(e),Fs.copySync(o,Path.join(e,"launch.json")),Editor.success("Chrome debug setting has been updated to .vscode/launch.json, please install Debugger for Chrome VS Code extension to debug your project.")},updateCompileTask(){let o=Editor.url("unpack://utils/vscode-extension/debugger/tasks.json"),e=Path.join(Editor.projectPath,".vscode");Fs.ensureDirSync(e),Fs.copySync(o,Path.join(e,"tasks.json")),Editor.success('Compiling task has been added to .vscode/tasks.json, please run "compile" task in VS Code to trigger compile in Cocos Creator.')}};