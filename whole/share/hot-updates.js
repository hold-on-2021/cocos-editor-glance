"use strict";function requestUpdate(e,o,t,r,n,i){let a=o?"localhost":"fbupdater.avosapps.com",d=o?3e3:80,s={"X-LC-Id":"qaE6P62XSAGBMtxtbVJJUT5m-gzGzoHsz","X-LC-Key":"OwAmchirvy0Mo6eCEphYJdVg","Content-Type":"application/json; charset=utf-8"};o&&(s.testing=!0),e&&(s.version=e);let l="";Http.request({method:"POST",host:a,port:d,path:t,headers:s},e=>{if(e.setEncoding("utf8"),200!==e.statusCode)return n(),void 0;e.on("data",e=>{l+=e}).on("end",()=>{var e;try{return e=JSON.parse(l),e?(r(e),void 0):(n(),void 0)}catch(e){return i(e),void 0}})}).on("error",e=>{i(e)}).end()}function checkNewVersion(e){let o=Editor.Profile.load("profile://global/updates.json"),t=!lodash.includes(o.data["received-ids"],e.objectId),r=Editor.versions.CocosCreator;r=Semver.clean(r);let n=Semver.lt(r,e.version);return!(!t||!n)}function checkHotUpdates(e){let o=Editor.Profile.load("profile://global/updates.json"),t=Editor.isDarwin?"mac":"win",r=[];for(let n=0;n<e.length;++n){let i=e[n];if(lodash.includes(o.data["installed-hotupdates"],i.objectId))continue;let a,d;a=i.package_info[t+"_link"],d=i.package_info.changelog,r.push({url:a,changelog:d,contentType:i.contentType,versionId:i.objectId})}return console.log(r),r}function queryHotUpdate(e){Editor.log("Query Hot Updates...");requestUpdate(Editor.versions.CocosCreator,e,"/hotupdates/latest",function(e){let o=checkHotUpdates(e);return o.length>0?(Editor.log("Hot update content found. Launch Auto Update."),Editor.Ipc.sendToMain("downloader:open",{downloads:o}),void 0):(Editor.log("No hot updates available."),void 0)},function(){Editor.log("No hot updates available.")},function(e){Editor.warn("Connecting to Auto Update service failed or Data parsing error occurs."),Editor.warn(e)})}const Electron=require("electron");let _ipc=null;_ipc=Editor.isMainProcess?Electron.ipcMain:Electron.ipcRenderer;const lodash=require("lodash"),Http=require("http"),Semver=require("semver"),Path=require("path");_ipc.on("app:query-fb-update",()=>{Editor.log("Query updating...");requestUpdate(null,!1,"/versions/latest",function(e){if(checkNewVersion(e)){let o=Editor.isDarwin?"mac":"win";return Editor.log(`New Version ${e.version} found. Launch Auto Update.`),Editor.Ipc.sendToMain("downloader:open",{downloads:[{url:e.package_info[o+"_link"],version:e.version,changelog:e.package_info.changelog,versionId:e.objectId}]}),void 0}return Editor.log("No version update available."),queryHotUpdate(!1),void 0},function(){Editor.log("No version update available."),queryHotUpdate(!1)},function(e){Editor.warn("Connecting to Auto Update service failed or Data parsing error occurs."),Editor.warn(e)})});